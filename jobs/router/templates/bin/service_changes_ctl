#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

source /var/vcap/jobs/router/helpers/ctl_setup.sh 'router' 'service_changes'
DEBUG=${DEBUG:-}

case $1 in

  start)
    pid_guard $PIDFILE 'service_changes'

    # store pid in $PIDFILE
    echo $$ > $PIDFILE

    export ETCD_CLUSTER=${ETCD_CLUSTER:-<%= p("etcd.machines").first %>:2379}

    event=$(curl -sL "${ETCD_CLUSTER}/v2/keys/service/?wait=true&recursive=true")

    # if new cluster discovered, allocate it an available public port
    # stored at /routing/allocation/$name
    function allocate_port() {
      name=$1
      echo "checking if cluster already has port assigned for: $name"
      allocated_port=$(curl -sL "${ETCD_CLUSTER}/v2/keys/routing/allocation/${name}" | jq -r .node.value)
      if [[ "${allocated_port}" == "null" ]]; then
        echo "new cluster discovered by router: $name"

        port=$(curl -sL "${ETCD_CLUSTER}/v2/keys/routing/nextport" | jq -r .node.value)
        if [[ "${port}" == "null" ]]; then
          port=33000
        fi
        echo "assigning port $port"
        curl -sL "${ETCD_CLUSTER}/v2/keys/routing/allocation/${name}" -X PUT -d value=${port}

        nextPort=$((port+1))
        curl -sL "${ETCD_CLUSTER}/v2/keys/routing/nextport" -X PUT -d value=${nextPort}
      fi
    }

    pathRegexp="\/service\/([^\/]+)\/"
    while :
    do
      eventIndex=$(echo $event | jq -r ".node.modifiedIndex")
      nextEventIndex=$((eventIndex+1))

      if [[ "$(echo $event | jq -r .action)" == "create" ]]; then
        pathKey=$(echo $event | jq -r .node.key) # typically key /service/cf-123/initialize
        [[ $pathKey =~ $pathRegexp ]]
        name="${BASH_REMATCH[1]}"
        if [[ ! -z "${name}" ]]; then
          allocate_port $name
        fi
      fi
      event=$(curl -sL "http://${ETCD_CLUSTER}/v2/keys/service/?wait=true&recursive=true&waitIndex=${nextEventIndex}")
    done
    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: service_changes_ctl {start|stop}"

    ;;

esac
exit 0
