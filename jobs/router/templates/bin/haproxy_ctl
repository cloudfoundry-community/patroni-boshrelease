#!/bin/bash

set -e

PATH=/var/vcap/packages/haproxy/bin:$PATH
PID_FILE=/var/vcap/sys/run/router/haproxy.pid

NAME=haproxy
DAEMON=$(which haproxy)
CONFIG=/var/vcap/sys/run/router/haproxy.cfg
DESC="HAProxy"
USER=vcap

TIMESTAMP=$(which date)


set +e
error_code=x
i="0"
while [[ $i -lt 20 && "${error_code}" != "0" ]]; do
  i=$[$i+1]
  sleep 1
  echo "waiting for $CONFIG $i/20"
  test -f "${CONFIG}"
  error_code=$?
done
set -e # exit immediately if a simple command exits with a non-zero status

test -f "${CONFIG}"

RETVAL=0

ensure_dir() {
    DIR=$1
    if [ ! -d "${DIR}" ] ; then
        mkdir -p "${DIR}"
        chown -R "${USER}":"${USER}" "${DIR}"
        chmod 755 "${DIR}"
    fi
}

ensure_dirs() {
    ensure_dir "$(dirname "${PID_FILE}")"
}

remove_pid() {
    rm -f "${PID_FILE}"
}

reload_haproxy() {
    RETVAL=0
    ensure_dirs
    echo "$("${TIMESTAMP}"): reloading HAProxy"
    set +e
    "${DAEMON}" -f "${CONFIG}" -p "${PID_FILE}" -D -sf $(cat $PID_FILE) 0<&-
    RETVAL=$?
    set -e
    case "${RETVAL}" in
        0)
            echo "$("${TIMESTAMP}"): Finished reloading HAProxy"
            echo "SUCCESS"
            ;;
        *)
            echo "$("${TIMESTAMP}"): Errored reloading HAProxy"
            echo "$("${TIMESTAMP}"): Errored reloading HAProxy" >&2
            remove_pid
            echo "FAILED - check logs"
            RETVAL=1
            ;;
    esac
}

case "$1" in
    reload)
        echo -n "Reloading ${DESC}: "
        reload_haproxy
        echo "${NAME}."
        ;;
    *)
        echo "Usage: $0 {reload}" >&2
        RETVAL=1
        ;;
esac

exit "${RETVAL}"
