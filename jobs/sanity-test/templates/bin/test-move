#!/bin/bash

set -e
set -o pipefail
set -u

service_id=$1
plan_id=$2
instance_id=$3
uri=$4

indent() {
  c="s/^/test-move> /"
  case $(uname) in
    Darwin) sed -l "$c";; # mac/bsd sed: -l buffers on line boundaries
    *)      sed -u "$c";; # unix/gnu sed: -u unbuffered (arbitrary) chunks of data
  esac
}

# script() {
  echo "*"
  echo "*"
  echo "* Testing service move of containers to new cells"
  echo "*"
  echo "*"
  set -x

psql ${uri} -c 'DROP TABLE IF EXISTS sanitytest'
psql ${uri} -c 'CREATE TABLE sanitytest(value text);'
psql ${uri} -c "INSERT INTO sanitytest VALUES ('move-test');"

# Get available cell GUIDs
# Get cell GUIDs currently used by service
# Determine alternate set of GUIDs
# Update service with "cells" set to other cells
set +x
available_cells_guids=$(curl -sf ${BROKER_URI}/admin/cells | jq -r ".[].guid" | sort)
service_cells_guids=$(curl -sf ${BROKER_URI}/admin/service_instances/${instance_id} | jq -r ".nodes[].cell_guid" | sort)
set +o pipefail # diff returns error; and we don't want to exit script
alternate_cell_guids=$(diff <(echo $available_cells_guids | tr " " "\n") <(echo $service_cells_guids | tr " " "\n") | grep "<" | awk '{print $2}' | paste -sd "," -)
set -o pipefail
echo "alternate_cell_guids: $alternate_cell_guids"
update_service_parameters=$(jq -n -c -M --arg guids "$alternate_cell_guids" '{"cells": ($guids|split(","))}')
echo $update_service_parameters
set -x

time update-service $service_id $plan_id $instance_id $update_service_parameters

# even after "wait-for-leader" the connection might not be ready yet - for read or read/write
sleep 30

final_service_cells_guids=$(curl -sf ${BROKER_URI}/admin/service_instances/${instance_id} | jq -r ".nodes[].cell_guid")
if [[ "$service_cells_guids" == "$final_service_cells_guids" ]]; then
  echo "Cluster should have moved its nodes to different backend cells"
  exit 1
else
  echo "Cluster moved from: '$service_cells_guids' to: '$final_service_cells_guids'"
fi

psql ${uri} -c 'SELECT value FROM sanitytest;' | grep 'move-test' || {
  echo Could not retrieve value from cluster after it was moved!
  exit 1
}
# }
# script

# script 2>&1 | indent
