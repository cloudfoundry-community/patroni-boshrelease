#!/bin/bash

set -e

table_name=$1
value=$2

DATA_DIR=/data
PGDATA=${DATA_DIR}/postgres
WALE_ENV_DIR=${DATA_DIR}/wal-e/env
mkdir -p ${WALE_ENV_DIR} ${PGDATA}

echo ${AWS_REGION} > ${WALE_ENV_DIR}/AWS_REGION
echo ${AWS_SECRET_ACCESS_KEY} > ${WALE_ENV_DIR}/AWS_SECRET_ACCESS_KEY
echo ${AWS_ACCESS_KEY_ID} > ${WALE_ENV_DIR}/AWS_ACCESS_KEY_ID
echo ${WAL_S3_BUCKET} > ${WALE_ENV_DIR}/WAL_S3_BUCKET
echo "s3://${WAL_S3_BUCKET}/backups/${PATRONI_SCOPE}/wal/" > ${WALE_ENV_DIR}/WALE_S3_PREFIX

echo "Fetching basebackup from aws..."
envdir ${WALE_ENV_DIR} wal-e backup-fetch ${PGDATA} LATEST

touch ${PGDATA}/postgresql.conf
cat <<EOF > ${PGDATA}/pg_hba.conf
local postgres ${APPUSER_USERNAME} trust
host    postgres  ${APPUSER_USERNAME}  127.0.0.1/32 trust
host    postgres     ${APPUSER_USERNAME}             ::1/128 trust
EOF
cat <<EOF > ${PGDATA}/recovery.conf
restore_command = 'envdir ${WALE_ENV_DIR} wal-e wal-fetch "%f" "%p"'
EOF

chown postgres:postgres -R ${PGDATA}

echo "Starting postgres with data recovered from backups..."
sudo -E -u postgres postgres -D ${PGDATA} > /data/pglogs 2>&1 &
sleep 5
tail -f /data/pglogs | while read LOGLINE
do
  [[ "${LOGLINE}" == *"autovacuum launcher started" ]] && pkill -P $$ tail
done

echo "Checking that value ${value} from table ${table_name} is retrievable..."
uri="postgres://${APPUSER_USERNAME}:${APPUSER_PASSWORD}@localhost:5432/postgres"
psql ${uri} -c "SELECT value FROM ${table_name};" | grep "${value}" || {
  echo "Value was not recovered from backups!"
  exit 1
}
