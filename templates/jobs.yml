meta:
  job_templates:
    patroni: (( param "please provide templates for cells" ))
    router: [{name: router, release: patroni}]
    broker: [{name: broker, release: patroni}]

jobs:
  - name: cell_z1
    instances: 3
    templates: (( grab meta.job_templates.patroni ))
    resource_pool: cell_z1
    networks: [{name: patroni1}]
    persistent_disk: 10240
    properties:
      zone: z1
  - name: router
    instances: 1
    templates: (( grab meta.job_templates.router ))
    resource_pool: router_z1
    networks: [{name: router1}]
  - name: broker
    instances: 1
    templates: (( grab meta.job_templates.broker ))
    resource_pool: broker_z1
    networks: [{name: router1}]
    properties:
      broker:
        router:
          hostname: (( param "please provide public hostname for routers" ))
        backends:
          machines: (( param "please provide array of backend broker hostname" ))

    update:
      canary_watch_time: 10000-30000
      update_watch_time: 10000-30000

resource_pools:
  - name: cell_z1
    stemcell: (( grab meta.stemcell ))
    cloud_properties: (( param "please provide cloud_properties"))
    network: patroni1
  - name: router_z1
    stemcell: (( grab meta.stemcell ))
    cloud_properties: (( param "please provide cloud_properties"))
    network: router1
  - name: broker_z1
    stemcell: (( grab meta.stemcell ))
    cloud_properties: (( param "please provide cloud_properties"))
    network: router1

networks:
- name: patroni1
- name: router1

properties:
  etcd:
    machines: (( param "please provide array of etcd hostnames" ))
