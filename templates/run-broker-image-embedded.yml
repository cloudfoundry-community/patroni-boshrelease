---
meta:
  cfcontainersbroker:
    cc_api_uri: (( param "please provide CF api url" ))
    external_host: (( param "please provide the hostname to advertise for the broker" ))
    username: containers
    password: containers
    cookie_secret: 'e7247dae-a252-4393-afa3-2219c1c02efd'
    protocol: https
    ssl_enabled: true
    max_containers: 20

  job_templates:
    patroni:
    # ship all the logs
    - {name: remote-syslog, release: simple-remote-syslog}
    # run docker daemon
    - {name: docker, release: patroni-docker}
    # warm docker image cache from bosh package
    - {name: embedded-images, release: patroni-docker}
    # run registrator daemon
    - {name: registrator, release: patroni-docker}
    # create uuid for each broker/daemon
    - {name: container-env-vars, release: patroni-docker}
    # run service broker
    - {name: cf-containers-broker, release: patroni-docker}

properties:
  cf:
    api_url: (( grab meta.cfcontainersbroker.cc_api_uri ))

  registrator:
    backend_uri: (( grab meta.registrator.backend_uri))

  broker:
    protocol: (( grab meta.cfcontainersbroker.protocol ))
    ssl_enabled: (( grab meta.cfcontainersbroker.ssl_enabled ))
    host: (( grab meta.cfcontainersbroker.external_host ))
    port: 80
    username: (( grab meta.cfcontainersbroker.username ))
    password: (( grab meta.cfcontainersbroker.password ))
    cookie_secret: (( grab meta.cfcontainersbroker.cookie_secret ))
    max_containers: (( grab meta.cfcontainersbroker.max_containers ))
    fetch_images: false
    services: (( grab meta.broker.services))
  servicebroker:
    services: (( grab meta.broker.services))
